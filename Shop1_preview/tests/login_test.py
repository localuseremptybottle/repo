from selenium.webdriver import Keys
from selenium.webdriver.common.by import By

import pytest
from pages.my_account_page import Myaccountpage
from random import randint
import names
from password_generator import PasswordGenerator


@pytest.mark.usefixtures("setup")

class TestLogin:
        #test do sprawdzania logowania
    def test_RegistrationAccountPassed(self): #To klasa dla sprawdzania loginu  poprawnego
        email = str(randint(0, 1000)) + 'test@test.com'
        name = str(names.get_full_name(gender ='male'))
        password = str(randint(0, 1000)) + str(names.get_full_name(gender ='female'))
        My_account_page  = Myaccountpage(self.driver)
        My_account_page.open_page()
        My_account_page.switch_to_frame()
        assert My_account_page.is_logo_dsplayed()
        My_account_page.click_on_Signupbutton()
        assert My_account_page.is_NewUserSignup_displayed()
        My_account_page.create_account_first_step(name,email)
        assert My_account_page.is_Enter_accountinformation_displayed()
        My_account_page.switch_to_frame()
        My_account_page.create_account_second_step(name,password)
        My_account_page.click_on_createbutton()
        assert My_account_page.is_textaccountcreated_displayed()
        My_account_page.click_on_Continuebutton()
        My_account_page.switch_to_frame()
        My_account_page.click_on_Continuebutton()
        assert My_account_page.is_loggedasis_displayed()
        My_account_page.click_on_DeleteAccountButton()
        assert My_account_page.is_accountdeletedtextis_displayed()

    def test_LoginUserCorrect(self): #Bez opcji kasowania
        login ='wuj3khp@gmail.com'
        password = '13qeadzc'
        My_account_page = Myaccountpage(self.driver)
        My_account_page.open_page()
        My_account_page.switch_to_frame()
        assert My_account_page.is_logo_dsplayed()
        My_account_page.click_on_Signupbutton()
        assert My_account_page.is_Logintoyouraccount_displayed()
        My_account_page.log_in(login,password)
        assert My_account_page.is_loggedasis_displayed()

    def test_LoginUserinCorrect(self):  # Bez opcji kasowania
        login = 'wuj3khp@gmail.com'
        password = '13qeadzc3'
        My_account_page = Myaccountpage(self.driver)
        My_account_page.open_page()
        My_account_page.switch_to_frame()
        assert My_account_page.is_logo_dsplayed()
        My_account_page.click_on_Signupbutton()
        assert My_account_page.is_Logintoyouraccount_displayed()
        My_account_page.log_in(login, password)
        assert My_account_page.is_Loginisincorrect_displayed()
    def test_LogoutUser(self):
        login = 'wuj3khp@gmail.com'
        password = '13qeadzc'
        My_account_page = Myaccountpage(self.driver)
        My_account_page.open_page()
        My_account_page.switch_to_frame()
        assert My_account_page.is_logo_dsplayed()
        My_account_page.click_on_Signupbutton()
        assert My_account_page.is_Logintoyouraccount_displayed()
        My_account_page.log_in(login, password)
        assert My_account_page.is_loggedasis_displayed()
        My_account_page.click_on_logoutbutton()
        assert My_account_page.is_Logintoyouraccount_displayed()
    def test_Registeruserwithexistingemail(self):
        email = 'wuj3khp@gmail.com'
        password = '13qeadzc'
        name = 'Zbyszek'
        My_account_page = Myaccountpage(self.driver)
        My_account_page.open_page()
        My_account_page.switch_to_frame()
        assert My_account_page.is_logo_dsplayed()
        My_account_page.click_on_Signupbutton()
        assert My_account_page.is_Logintoyouraccount_displayed()
        My_account_page.create_account_first_step(name, email)
        assert My_account_page.is_EmailAddressalreadyexist_displayed()
    def test_ContactusForm(self):
        name = 'Bartolini'
        email = 'Dziobanhomocommando@commando.pl'
        subject = 'DziobanaWyprysk'
        message = 'Prosze Pana, Dziobana łokieć śwędzi'
        My_account_page = Myaccountpage(self.driver)
        My_account_page.open_page()
        My_account_page.switch_to_frame()
        assert My_account_page.is_logo_dsplayed()
        My_account_page.click_on_Contactusbutton()
        assert My_account_page.is_Getintouch_displayed()
        My_account_page.SendContactusform(name,email,subject,message)
        My_account_page.Areyousurepopup()
        assert My_account_page.is_Successtext_displayed()
        My_account_page.click_on_home_Button()
        My_account_page.switch_to_frame()
        My_account_page.click_on_home_Button()
        assert My_account_page.is_Featuresitems_displayed()
    def test_VerifyTestCasesPage(self):
        My_account_page = Myaccountpage(self.driver)
        My_account_page.open_page()
        My_account_page.switch_to_frame()
        assert My_account_page.is_logo_dsplayed()
        My_account_page.click_on_Testcases()
        My_account_page.switch_to_frame()
        My_account_page.click_on_Testcases()
        assert My_account_page.is_Testcasestext_displayed()
    def test_VerifyAllProductsAndProductDetailPage(self):
        My_account_page = Myaccountpage(self.driver)
        My_account_page.open_page()
        My_account_page.switch_to_frame()
        assert My_account_page.is_logo_dsplayed()
        My_account_page.click_on_Products_Button()
        My_account_page.switch_to_frame()
        My_account_page.click_on_Products_Button()
        assert My_account_page.is_featuresitemsdiv_displayed()
        My_account_page.switch_to_frame()
        My_account_page.click_on_ViewButton()
        My_account_page.switch_to_frame()
        assert My_account_page.is_ProductName_displayed()
        assert My_account_page.is_CategoryInformation_displayed()
        assert My_account_page.is_PriceInformation_displayed()
        assert My_account_page.is_QuantityInformation_displayed()
        assert My_account_page.is_BrandInformation_displayed()

    def test_Searchproduct(self):
        productname = 'RS. 500'
        My_account_page = Myaccountpage(self.driver)
        My_account_page.open_page()
        My_account_page.switch_to_frame()
        assert My_account_page.is_logo_dsplayed()
        My_account_page.click_on_Products_Button()
        My_account_page.switch_to_frame()
        My_account_page.click_on_Products_Button()
        assert My_account_page.is_featuresitemsdiv_displayed()
        My_account_page.Searching_with_Products_Searchbar(productname)
    def test_VerifySubscriptionInHomePage(self):
        email = 'wuj3khp@gmail.com'
        My_account_page = Myaccountpage(self.driver)
        My_account_page.open_page()
        My_account_page.switch_to_frame()
        assert My_account_page.is_logo_dsplayed()
        My_account_page.Jump_to_Footer()
        assert My_account_page.is_SubscriptionText_displayed()
        My_account_page.Try_Subscription_Email_Input(email)
        assert My_account_page.is_SubscriptionText_displayed()
        assert My_account_page.is_SubscriptionSuccessText_displayed()
    def test_VerifySubscriptioninCartpage(self):
        email = 'wuj3khp@gmail.com'
        My_account_page = Myaccountpage(self.driver)
        My_account_page.open_page()
        My_account_page.switch_to_frame()
        assert My_account_page.is_logo_dsplayed()
        My_account_page.click_on_Cart_Button()
        My_account_page.Jump_to_Footer()
        assert My_account_page.is_SubscriptionText_displayed()
        My_account_page.Try_Subscription_Email_Input(email)
        assert My_account_page.is_SubscriptionText_displayed()
        assert My_account_page.is_SubscriptionSuccessText_displayed()
    def test_AddProductsInCart(self):
        My_account_page = Myaccountpage(self.driver)
        My_account_page.open_page()
        My_account_page.switch_to_frame()
        assert My_account_page.is_logo_dsplayed()
        My_account_page.click_on_Products_Button()
        My_account_page.switch_to_frame()
        My_account_page.click_on_Add_to_Cart1()
        My_account_page.click_on_Continue_Shoping()
        My_account_page.click_on_Add_to_Cart2()
        My_account_page.click_on_view_cart()
        assert My_account_page.is_ShoppingCart_SecondProduct_displayed()
        assert My_account_page.is_ShoppingCart_FirstPrice_displayed()
        assert My_account_page.is_ShoppingCart_SecondPrice_displayed()
        assert My_account_page.is_ShoppingCart_FirstQuantity_displayed()
        assert My_account_page.is_ShoppingCart_SecondQuantity_displayed()
        assert My_account_page.is_ShoppingCart_FirstTotalPrice_displayed()
        assert My_account_page.is_ShoppingCart_SecondTotalPrice_displayed()
    def test_VerifyProductquantityinCart(self):
        My_account_page = Myaccountpage(self.driver)
        My_account_page.open_page()
        My_account_page.switch_to_frame()
        assert My_account_page.is_logo_dsplayed()
        My_account_page.click_on_MainPage_View_Button()
        My_account_page.switch_to_frame()
        My_account_page.click_on_MainPage_View_Button()
        assert My_account_page.is_ProductName_displayed()
        My_account_page.click_on_Product_Quantity_input()
        My_account_page.click_on_AddtoCard_in_ProductCard()
        My_account_page.click_on_view_cart()
        assert My_account_page.is_QuantitytestInformation_displayed()
    def test_Place_Order_Register_while_Checkout(self):
        email = str(randint(0, 1000)) + 'test@test.com'
        name = str(names.get_full_name(gender='male'))
        My_account_page = Myaccountpage(self.driver)
        My_account_page.open_page()
        My_account_page.switch_to_frame()
        assert My_account_page.is_logo_dsplayed()
        My_account_page.click_on_Add_to_Cart1()
        My_account_page.click_on_Continue_Shoping()
        My_account_page.click_on_Add_to_Cart2()
        My_account_page.click_on_Cart_Button()
        assert My_account_page.is_ShoppingCart_SecondQuantity_displayed()
        My_account_page.click_on_ProceedToCheckout()
        My_account_page.click_on_RegistryLoginButtoninShoppingcart()
        My_account_page.create_account_first_step(name,email)
        My_account_page.switch_to_frame()
        My_account_page.create_account_second_step(name,email)
        My_account_page.click_on_createbutton()
        My_account_page.switch_to_frame()
        assert My_account_page.is_textaccountcreated_displayed()
        My_account_page.click_on_Continuebutton()
        My_account_page.switch_to_frame()
        My_account_page.click_on_Continuebutton()
        assert My_account_page.is_loggedasis_displayed()
        My_account_page.click_on_Cart_Button()
        My_account_page.click_on_ProceedToCheckout()
        assert My_account_page.is_First_nameinShoppingCard_correct()
        assert My_account_page.is_Second_nameinShoppingCard_correct()
        assert My_account_page.is_AddressInShoppingCard_correct()
        assert My_account_page.is_Address2inShoppingCard_correct()
        assert My_account_page.is_Address_cityinShoppingCard_correct()
        assert My_account_page.is_State_nameinShoppingCard_correct()
        assert My_account_page.is_postcodeinShoppingCard_correct()
        assert My_account_page.is_mobilephoneinShoppingCard_correct()
        My_account_page.switch_to_frame()
        My_account_page.click_on_TextArea_in_Shoppingcart()
        My_account_page.click_on_PlaceOrderButton_in_ShoppingCart()
        My_account_page.Complete_the_entire_payment_form()
        assert My_account_page.is_CongratulationText_in_Paymanet_displayed()
        My_account_page.click_on_DeleteAccountButton()
        assert My_account_page.is_accountdeletedtextis_displayed()

    def test_Place_Order_Register_before_Checkout(self):
        email = str(randint(0, 1000)) + 'test@test.com'
        name = str(names.get_full_name(gender='male'))
        password = str(randint(0, 1000)) + str(names.get_full_name(gender='female'))
        My_account_page = Myaccountpage(self.driver)
        My_account_page.open_page()
        My_account_page.switch_to_frame()
        assert My_account_page.is_logo_dsplayed()
        My_account_page.click_on_Signupbutton()
        assert My_account_page.is_NewUserSignup_displayed()
        My_account_page.create_account_first_step(name, email)
        assert My_account_page.is_Enter_accountinformation_displayed()
        My_account_page.switch_to_frame()
        My_account_page.create_account_second_step(name, password)
        My_account_page.click_on_createbutton()
        assert My_account_page.is_textaccountcreated_displayed()
        My_account_page.click_on_Continuebutton()
        My_account_page.switch_to_frame()
        My_account_page.click_on_Continuebutton()
        My_account_page.switch_to_frame()
        My_account_page.click_on_Add_to_Cart1()
        My_account_page.click_on_Continue_Shoping()
        My_account_page.click_on_Add_to_Cart2()
        My_account_page.click_on_Cart_Button()
        assert My_account_page.is_ShoppingCart_SecondQuantity_displayed()
        My_account_page.click_on_ProceedToCheckout()
        My_account_page.click_on_Cart_Button()
        My_account_page.click_on_ProceedToCheckout()
        assert My_account_page.is_First_nameinShoppingCard_correct()
        assert My_account_page.is_Second_nameinShoppingCard_correct()
        assert My_account_page.is_AddressInShoppingCard_correct()
        assert My_account_page.is_Address2inShoppingCard_correct()
        assert My_account_page.is_Address_cityinShoppingCard_correct()
        assert My_account_page.is_State_nameinShoppingCard_correct()
        assert My_account_page.is_postcodeinShoppingCard_correct()
        assert My_account_page.is_mobilephoneinShoppingCard_correct()
        My_account_page.switch_to_frame()
        My_account_page.click_on_TextArea_in_Shoppingcart()
        My_account_page.click_on_PlaceOrderButton_in_ShoppingCart()
        My_account_page.Complete_the_entire_payment_form()
        assert My_account_page.is_CongratulationText_in_Paymanet_displayed()
        My_account_page.click_on_DeleteAccountButton()
        assert My_account_page.is_accountdeletedtextis_displayed()

    def test_Place_Order_Login_before_Checkout(self):
        login = 'Sen@Sen.pl'
        password = '13qeadzc'
        My_account_page = Myaccountpage(self.driver)
        My_account_page.open_page()
        My_account_page.switch_to_frame()
        assert My_account_page.is_logo_dsplayed()
        My_account_page.click_on_Signupbutton()
        assert My_account_page.is_Logintoyouraccount_displayed()
        My_account_page.log_in(login, password)
        assert My_account_page.is_loggedasis_displayed()
        My_account_page.switch_to_frame()
        My_account_page.click_on_Add_to_Cart1()
        My_account_page.click_on_Continue_Shoping()
        My_account_page.click_on_Add_to_Cart2()
        My_account_page.click_on_Cart_Button()
        assert My_account_page.is_ShoppingCart_SecondQuantity_displayed()
        My_account_page.click_on_ProceedToCheckout()
        My_account_page.click_on_Cart_Button()
        My_account_page.click_on_ProceedToCheckout()
        assert My_account_page.is_First_nameinShoppingCard_correct()
        assert My_account_page.is_Second_nameinShoppingCard_correct()
        assert My_account_page.is_AddressInShoppingCard_correct()
        assert My_account_page.is_Address2inShoppingCard_correct()
        assert My_account_page.is_Address_cityinShoppingCard_correct()
        assert My_account_page.is_State_nameinShoppingCard_correct()
        assert My_account_page.is_postcodeinShoppingCard_correct()
        assert My_account_page.is_mobilephoneinShoppingCard_correct()
        My_account_page.switch_to_frame()
        My_account_page.click_on_TextArea_in_Shoppingcart()
        My_account_page.switch_to_frame()
        My_account_page.click_on_PlaceOrderButton_in_ShoppingCart()
        My_account_page.switch_to_frame()
        My_account_page.click_on_PlaceOrderButton_in_ShoppingCart()
        My_account_page.Complete_the_entire_payment_form()
        assert My_account_page.is_CongratulationText_in_Paymanet_displayed()
    def test_Remove_Products_From_Cart(self):
        My_account_page = Myaccountpage(self.driver)
        My_account_page.open_page()
        My_account_page.switch_to_frame()
        assert My_account_page.is_logo_dsplayed()
        My_account_page.switch_to_frame()
        My_account_page.click_on_Add_to_Cart1()
        My_account_page.click_on_Continue_Shoping()
        My_account_page.click_on_Add_to_Cart2()
        My_account_page.click_on_Cart_Button()
        My_account_page.switch_to_frame()
        assert My_account_page.is_ShoppingCart_SecondQuantity_displayed()
        My_account_page.click_on_Delete_for_Product1_in_shopping_cart()
        My_account_page.click_on_Delete_for_Product2_in_shopping_cart()
        My_account_page.switch_to_frame()
        assert My_account_page.is_CartIsEmpty_text_in_Shoppingcart_displayed()
    def test_View_Category_Products(self):
        My_account_page = Myaccountpage(self.driver)
        My_account_page.open_page()
        My_account_page.switch_to_frame()
        assert My_account_page.is_logo_dsplayed()
        assert My_account_page.is_CategoryBar_in_MainPain_displayed()
        My_account_page.click_on_Woman_Category()
        My_account_page.click_on_Sare_Category()
        My_account_page.switch_to_frame()
        My_account_page.click_on_Woman_Category()
        My_account_page.click_on_Tops_Category()
        assert My_account_page.is_WomanTopProducts_in_MainPage_displayed()
        My_account_page.switch_to_frame()
        My_account_page.click_on_Men_Category()
        My_account_page.click_on_Men_Tshirts_subCategory()
        assert My_account_page.is_MenTshirtsProductstext_in_Mainpage_displayed()
    def test_View_Cart_Brand_Products(self):
        My_account_page = Myaccountpage(self.driver)
        My_account_page.open_page()
        My_account_page.switch_to_frame()
        assert My_account_page.is_logo_dsplayed()
        My_account_page.click_on_Products_Button()
        My_account_page.switch_to_frame()
        My_account_page.click_on_Products_Button()
        My_account_page.switch_to_frame()
        My_account_page.is_BrandcategoryText_in_Mainpage_displayed()
        My_account_page.click_on_Brands_Polo_subCategory()
        My_account_page.switch_to_frame()
        assert My_account_page.is_Polo_Address_Category_is_Correct(),"The URL is not valid."
        assert My_account_page.is_ImageOfProduct1_in_PoloCategory_displayed()
        My_account_page.click_on_Brands_Madame_subCategory()
        assert My_account_page.is_Madame_Address_Category_is_Correct()
        assert My_account_page.is_ImageOfProduct1_in_MadameCategory_displayed()
    def test_Search_Products_and_Verify_Cart_After_Login(self):
        productname = 'T-Shirt'
        email = 'wuj3khp@gmail.com'
        password ='13qeadzc'
        My_account_page = Myaccountpage(self.driver)
        My_account_page.open_page()
        My_account_page.switch_to_frame()
        assert My_account_page.is_logo_dsplayed()
        My_account_page.click_on_Products_Button()
        My_account_page.switch_to_frame()
        My_account_page.click_on_Products_Button()
        assert My_account_page.is_Products_Address_Correct()
        My_account_page.Searching_with_Products_Searchbar(productname)
        My_account_page.switch_to_frame()
        assert My_account_page.is_SearchedProducts_displayed()
        My_account_page.click_on_searched_AddtoCart1and2()
        My_account_page.click_on_Cart_Button()
        assert My_account_page.is_ShoppingCart_SecondProduct_displayed()
        My_account_page.click_on_Signupbutton()
        My_account_page.log_in(email,password)
        My_account_page.click_on_Cart_Button()
        assert My_account_page.is_ShoppingCart_SecondProduct_displayed()
    def test_Add_review_on_product(self):
        My_account_page = Myaccountpage(self.driver)
        My_account_page.open_page()
        My_account_page.switch_to_frame()
        assert My_account_page.is_logo_dsplayed()
        My_account_page.click_on_Products_Button()
        My_account_page.switch_to_frame()
        My_account_page.click_on_Products_Button()
        assert My_account_page.is_Products_Address_Correct()
        My_account_page.switch_to_frame()
        My_account_page.click_on_ViewButton()
        My_account_page.switch_to_frame()
        My_account_page.Write_Review_in_Product_card()
        My_account_page.click_on_Submit_Review_in_ProductCard()
        assert My_account_page.is_Thankyoutext_after_Submited_review_displayed()

    def test_Add_to_cart_from_Recommended_items(self):
        My_account_page = Myaccountpage(self.driver)
        My_account_page.open_page()
        My_account_page.switch_to_frame()
        assert My_account_page.is_logo_dsplayed()
        My_account_page.Jump_to_Footer()
        assert My_account_page.Mainpage_Recommended_Items_text
        My_account_page.click_on_Addtocart_on_Recommendeditems()
        My_account_page.click_on_view_cart()
        assert My_account_page.is_ShoppingCart_Address_Correct()

    def test_Verify_Address_details_in_checkout_page(self):
        email = str(randint(0, 2000)) + 'testtest@test.com'
        name = str(names.get_full_name(gender='male'))
        password = str(randint(0, 1000)) + str(names.get_full_name(gender='female'))
        My_account_page = Myaccountpage(self.driver)
        My_account_page.open_page()
        My_account_page.switch_to_frame()
        assert My_account_page.is_logo_dsplayed()
        My_account_page.click_on_Signupbutton()
        assert My_account_page.is_NewUserSignup_displayed()
        My_account_page.create_account_first_step(name, email)
        assert My_account_page.is_Enter_accountinformation_displayed()
        My_account_page.switch_to_frame()
        My_account_page.create_account_second_step(name, password)
        My_account_page.click_on_createbutton()
        My_account_page.switch_to_frame()
        assert My_account_page.is_textaccountcreated_displayed()
        My_account_page.click_on_Continuebutton()
        My_account_page.switch_to_frame()
        My_account_page.click_on_Continuebutton()
        assert My_account_page.is_loggedasis_displayed()
        My_account_page.switch_to_frame()
        My_account_page.click_on_Add_to_Cart1()
        My_account_page.click_on_ViewButton()
        My_account_page.click_on_Cart_Button()
        assert My_account_page.is_ShoppingCart_Address_Correct()
        My_account_page.click_on_ProceedToCheckout()
        My_account_page.switch_to_frame()
        assert My_account_page.is_First_nameinShoppingCard_correct()
        assert My_account_page.is_Second_nameinShoppingCard_correct()
        assert My_account_page.is_AddressInShoppingCard_correct()
        assert My_account_page.is_Address2inShoppingCard_correct()
        assert My_account_page.is_Address_cityinShoppingCard_correct()
        assert My_account_page.is_State_nameinShoppingCard_correct()
        assert My_account_page.is_postcodeinShoppingCard_correct()
        assert My_account_page.is_Name_in_BillingAddress_displayed()
        assert My_account_page.is_LastName_in_BillingAddress_displayed()
        assert My_account_page.is_Address1_in_BillingAddress_displayed()
        assert My_account_page.is_Address2_in_BillingAddress_displayed()
        assert My_account_page.is_AddressCity_in_BillingAddress_displayed()
        assert My_account_page.is_StateName_in_BillingAddress_displayed()
        assert My_account_page.is_Postcode_in_BillingAddress_displayed()
        assert My_account_page.is_MobilePhone_in_BillingAddress_displayed()
        My_account_page.click_on_DeleteAccountButton()
        assert My_account_page.is_accountdeletedtextis_displayed()
    def test_Download_Invoice_after_purchase_order(self):
        email = str(randint(0, 2000)) + 'testtest@test.com'
        name = str(names.get_full_name(gender='male'))
        password = str(randint(0, 1000)) + str(names.get_full_name(gender='female'))
        My_account_page = Myaccountpage(self.driver)
        My_account_page.open_page()
        My_account_page.switch_to_frame()
        assert My_account_page.is_logo_dsplayed()
        My_account_page.click_on_Add_to_Cart1()
        My_account_page.click_on_view_cart()
        assert My_account_page.is_ShoppingCart_Address_Correct()
        My_account_page.click_on_Signupbutton()
        assert My_account_page.is_NewUserSignup_displayed()
        My_account_page.create_account_first_step(name, email)
        assert My_account_page.is_Enter_accountinformation_displayed()
        My_account_page.switch_to_frame()
        My_account_page.create_account_second_step(name, password)
        My_account_page.click_on_createbutton()
        My_account_page.switch_to_frame()
        assert My_account_page.is_textaccountcreated_displayed()
        My_account_page.click_on_Continuebutton()
        My_account_page.switch_to_frame()
        My_account_page.click_on_Continuebutton()
        assert My_account_page.is_loggedasis_displayed()
        My_account_page.switch_to_frame()
        My_account_page.click_on_Cart_Button()
        My_account_page.click_on_ProceedToCheckout()
        assert My_account_page.is_First_nameinShoppingCard_correct()
        assert My_account_page.is_Second_nameinShoppingCard_correct()
        assert My_account_page.is_AddressInShoppingCard_correct()
        assert My_account_page.is_Address2inShoppingCard_correct()
        assert My_account_page.is_Address_cityinShoppingCard_correct()
        assert My_account_page.is_State_nameinShoppingCard_correct()
        assert My_account_page.is_postcodeinShoppingCard_correct()
        assert My_account_page.is_Name_in_BillingAddress_displayed()
        assert My_account_page.is_LastName_in_BillingAddress_displayed()
        assert My_account_page.is_Address1_in_BillingAddress_displayed()
        assert My_account_page.is_Address2_in_BillingAddress_displayed()
        assert My_account_page.is_AddressCity_in_BillingAddress_displayed()
        assert My_account_page.is_StateName_in_BillingAddress_displayed()
        assert My_account_page.is_Postcode_in_BillingAddress_displayed()
        assert My_account_page.is_MobilePhone_in_BillingAddress_displayed()
        My_account_page.switch_to_frame()
        My_account_page.click_on_TextArea_in_Shoppingcart()
        My_account_page.click_on_PlaceOrderButton_in_ShoppingCart()
        My_account_page.Complete_the_entire_payment_form()
        assert My_account_page.is_CongratulationText_in_Paymanet_displayed()
        My_account_page.click_on_Download_Invoice()
        My_account_page.click_on_ContinueButton_in_PaymentCard()
        My_account_page.click_on_DeleteAccountButton()
        assert My_account_page.is_accountdeletedtextis_displayed()

    def test_Verify_Scroll_Up_using_Arrow_button_and_Scroll_Down_functionality(self):
        My_account_page = Myaccountpage(self.driver)
        My_account_page.open_page()
        My_account_page.switch_to_frame()
        assert My_account_page.is_logo_dsplayed()
        My_account_page.Scroll_down_Script()
        assert My_account_page.is_SubscriptionText_displayed()
        My_account_page.click_on_Scrollup_button()
        assert My_account_page.is_Fullflegdgedtext_inMainpage_displayed()

    def test_Verify_Scroll_Up_without_Arrow_button_and_Scroll_Down_functionality(self):
        My_account_page = Myaccountpage(self.driver)
        My_account_page.open_page()
        My_account_page.switch_to_frame()
        assert My_account_page.is_logo_dsplayed()
        My_account_page.Scroll_down_Script()
        assert My_account_page.is_SubscriptionText_displayed()
        My_account_page.Scroll_Up_Script()
        assert My_account_page.is_Fullflegdgedtext_inMainpage_displayed()


